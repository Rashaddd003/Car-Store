@page
@using System.Data;
@model Car_Store.Pages.AdminViewModel
@{
    if (HttpContext.Session.GetInt32("User_Type") == null)
    {
        Layout = "_Layout";
    }
    else if (HttpContext.Session.GetInt32("User_Type") == 0)
    {
        Layout = "ClientLayout";
    }
    else if (HttpContext.Session.GetInt32("User_Type") == 1)
    {
        Layout = "adminlay";
    }
}
<header>
    <link rel="stylesheet" href="css/admin.css">
    <link rel="stylesheet" href="css/adminlay.css">
    <link rel="stylesheet" href="css/all.min.css">
    <link rel="stylesheet" href="css/normalize.css">
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Department', 'Male', 'Female'],
        @foreach (var data in Model.MaleFemaleDepartment)
        {
            <text>['@data.Id', @data.XValue, @data.YValue], </text>
        }
                ]);

            var options = {
                chart: {
                    title: 'Departments Gender Distribution'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('barchart_material'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['City', 'Branches','Departments'],
        @foreach (DataRow row in Model.BranchByCity.Rows)
        {
            <text>['@row["City"]', @row["Branch_Count"],@row["Department_Count"]], </text>
        }
            ]);

            var options = {
                chart: {
                    title: 'Branches in Cities'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('barchart_Branch_City'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['job Title', 'Highest', 'Average','Lowest'],
        @foreach (DataRow row in Model.JobSalary.Rows)
        {
            <text>['@row["JOB_TYPE"]', @row["Highest_Salary"], @row["Average_Salary"], @row["Lowest_Salary"]], </text>
        }
                        ]);

            var options = {
                chart: {
                    title: 'Job Salary'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('barchart_Job_Salary'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');
            data.addRows([
        @foreach (DataRow row in Model.EmployeesByJob.Rows)
        {
            <text>['@row["JOB_TYPE"]', @row["Employee_Count"]], </text>
        }
            ]);

            // Set chart options
            var options = {
                'title': 'Employees Distripution',
                height: 400
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');
            data.addRows([
        @foreach (DataRow row in Model.EmployeesByDep.Rows)
        {
            <text>['@row["Department_Name"]', @row["NumEmployees"]], </text>
        }
                    ]);

            // Set chart options
            var options = {
                'title': 'How Many Employees in each department',
                height: 400
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div_employee_dep'));
            chart.draw(data, options);
        }
    </script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');
            data.addRows([
        @foreach (DataRow row in Model.EmployeesByBranch.Rows)
        {
            <text>['@row["Bname"]', @row["NumEmployees"]], </text>
        }
                            ]);

            // Set chart options
            var options = {
                'title': 'How Many Employees in each Branch'
                ,height: 400
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div_employee_Branch'));
            chart.draw(data, options);
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawVisualization);

        function drawVisualization() {
            var data1 = new google.visualization.DataTable();
            data1.addColumn('string', 'Branch');
            data1.addColumn('number', 'Number of Cars');

        @foreach (DataRow row in Model.CarsInBranches.Rows)
        {
            <text>data1.addRow(['@row["Bname"]', @row["NumCars"]]); </text>
        }

                var options1 = {
                title: 'Number of Cars in the Branches',
                vAxis: { title: 'Branches' },
                hAxis: { title: 'Number of Cars' },
                height: 400
            };

            var chart1 = new google.visualization.ColumnChart(document.getElementById('chart_div_cars_branches'));

            chart1.draw(data1, options1);

            var data2 = new google.visualization.DataTable();
            data2.addColumn('string', 'Branch');
            data2.addColumn('number', 'Average');

        @foreach (DataRow row in Model.CarsInBranches.Rows)
        {
            <text>data2.addRow(['@row["Bname"]', @row["Average Price"]]); </text>
        }

                var options2 = {
                title: 'Average Price in the Branches',
                vAxis: { title: 'Branches' },
                hAxis: { title: 'Average Price' },
                height: 400
            };

            var chart2 = new google.visualization.ColumnChart(document.getElementById('chart_div_cars_branches_average'));

            chart2.draw(data2, options2);
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data1 = new google.visualization.DataTable();
            data1.addColumn('string', 'Branch');
            data1.addColumn('number', 'Number of Suppliers');

        @foreach (DataRow row in Model.BranchSupplier.Rows)
        {
            <text>data1.addRow(['@row["Bname"]', @row["Num_Suppliers"]]); </text>
        }

                        var options1 = {
                title: 'Number Suppliers to Branches',
                vAxis: { title: 'Branches' },
                hAxis: { title: 'Number of Suppliers' },
                height: 400
            };

            var chart1 = new google.visualization.ColumnChart(document.getElementById('chart_div_cars_supplier'));

            chart1.draw(data1, options1);
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Brand', 'Number of Cars','New', 'Used'],
        @foreach (DataRow row in Model.CarBrands.Rows)
        {
            <text>['@row["Brand"]', @row["Num_Cars"], @row["Num_New_Cars"], @row["Num_Used_Cars"]], </text>
        }
                ]);

            var options = {
                chart: {
                    title: 'Number of Cars by Brand'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('chart_div_Brands'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Brand','Average Price'],
        @foreach (DataRow row in Model.CarBrands.Rows)
        {
            <text>['@row["Brand"]', @row["Avg_New_Price"]], </text>
        }
                        ]);

            var options = {
                chart: {
                    title: 'Average Price of Car Brands'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('chart_div_Brands_avg'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Year Model', 'In Company' , 'New','Used' ],
        @foreach (DataRow row in Model.CarModel.Rows)
        {
            <text>['@row["Year_Model"]', @row["Count"], @row["Num_New_Cars"], @row["Num_Used_Cars"]], </text>
        }
                                ]);

            var options = {
                chart: {
                    title: 'Models'
                },
                bars: 'vertical',
                height: 400
            };

            var chart = new google.charts.Bar(document.getElementById('chart_div_Models'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Body Style', 'In Company', 'New', 'Used'],
        @foreach (DataRow row in Model.BodyStyle.Rows)
        {
            <text>['@row["Body_Style"]', @row["Count"], @row["Num_New_Cars"], @row["Num_Used_Cars"]], </text>
        }
                                        ]);
            contained = document.getElementsByClassName('charts-card').offsetWidth;
            var options = {
                chart: {
                    title: 'Body Styles'
                },
                bars: 'vertical',
                height: 400
            };
            

            var chart = new google.charts.Bar(document.getElementById('chart_div_BodyStyles'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }
    </script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Day', 'Sales'],
        @foreach (DataRow row in Model.Profit.Rows)
        {
            <text>['@row["order_date"]', @row["profit"]], </text>
        }
            ]);

            var options = {
                title: 'Company Performance',
                hAxis: { title: 'Days', titleTextStyle: { color: '#333' } },
                vAxis: { minValue: 0 },
                height: 400
            };

            var chart = new google.visualization.AreaChart(document.getElementById('Chart_profit'));
            chart.draw(data, options);
        }
    </script>
</header>
<link rel="stylesheet" href="~/css/admin.css" asp-append-version="true">
<div class="content">
    <!-- Main -->
    <main class="main-container">
        <div class="main-title">
            <p class="font-weight-bold">DASHBOARD</p>
        </div>

        <div class="main-cards">

            <div class="card">
                <div class="card-inner">
                    <p class="text-primary">Vehicles</p>
                    <i class="fa-solid fa-car font-weight-bold text-blue"></i>
                </div>
                <span class="text-primary font-weight-bold">@Model.ProductsCount.Rows[0][0]</span>
            </div>

            <div class="card">
                <div class="card-inner">
                    <p class="text-primary">IN PROCESS ORDERS</p>
                    <i class="fa-solid fa-cart-shopping text-orange font-weight-bold"></i>

                </div>
                <span class="text-primary font-weight-bold">@Model.ProcessingCount.Rows[0][0]</span>
            </div>

            <div class="card">
                <div class="card-inner">
                    <p class="text-primary">DELIVERING ORDERS</p>
                    <i class="fa-solid fa-truck text-green font-weight-bold"></i>
                </div>
                <span class="text-primary font-weight-bold">@Model.DeliveringCount.Rows[0][0]</span>
            </div>

            <div class="card">
                <div class="card-inner">
                    <p class="text-primary">ALERTS</p>
                    <i class="fa-solid fa-bell text-red font-weight-bold"></i>
                </div>
                <span class="text-primary font-weight-bold">@Model.Alerts.Rows[0][0]</span>
            </div>

        </div>

        <div class="charts">
            <div class="charts-card">
                <p class="chart-title">Brands in The Inventory</p>
                <div id="chart_div_Brands"></div>
            </div>
            <div class="charts-card">
                <p class="chart-title">Company Performance</p>
                <div id="Chart_profit"></div>
            </div>
        </div>
        <div id="sectionEmployees">
             <h3 class="char-title"> Employees</h3>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Gender Distripution In Departments</p>
                    <div id="barchart_material"></div>
                </div>
                <div class="charts-card">
                    <p class="chart-title">Job Salaries</p>
                    <div id="barchart_Job_Salary"></div>
                </div>
            </div>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Employees Distripution over Branches</p>
                    <div id="chart_div_employee_Branch"></div>
                </div>
                <div class="charts-card">
                    <p class="chart-title">Employees Distripution over Departments</p>
                    <div id="chart_div_employee_dep"></div>
                </div>
            </div>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Job Positions We Have</p>
                    <div id="chart_div"></div>
                </div>
            </div>
        </div>

        <div id="sectionVehicles">
            <h3>Vehicles</h3>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Brands and Their Prices</p>
                    <div id="chart_div_Brands_avg"></div>
                </div>
                <div class="charts-card">
                    <p class="chart-title">Car Models We Have</p>
                    <div id="chart_div_Models"></div>
                </div>
            </div>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Car Styles We Have</p>
                    <div id="chart_div_BodyStyles"></div>
                </div>
            </div>
        </div>
        <div id="sectionBranches">
            <h3>Branches</h3>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Our Branches</p>
                    <div id="barchart_Branch_City"></div>
                </div>
                <div class="charts-card">
                    <p class="chart-title">Average Prices in our Branches</p>
                    <div id="chart_div_cars_branches"></div>
                </div>
            </div>
            <div class="charts">
                <div class="charts-card">
                    <p class="chart-title">Suppliers of Branches</p>
                    <div id="chart_div_cars_branches_average"></div>
                </div>
                <div class="charts-card">
                    <p class="chart-title">Suppliers of Branches</p>
                    <div id="chart_div_cars_supplier"></div>
                </div>
            </div>
        </div>






   </main>
</div>